!function(e){var t={};function i(s){if(t[s])return t[s].exports;var n=t[s]={i:s,l:!1,exports:{}};return e[s].call(n.exports,n,n.exports,i),n.l=!0,n.exports}i.m=e,i.c=t,i.d=function(e,t,s){i.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},i.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},i.t=function(e,t){if(1&t&&(e=i(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(i.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)i.d(s,n,function(t){return e[t]}.bind(null,n));return s},i.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return i.d(t,"a",t),t},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="",i(i.s=0)}([function(e,t,i){"use strict";i.r(t);var s={getSavedData:function(){if(!("notFirstLoad"in localStorage)){const e={"List 1":{items:["Build the ToDo App"],doneItems:["Learn Design Patterns"]},"List 2":{items:["Optimize the ToDo App"],doneItems:["Learn Flexbox"]}};localStorage.setItem("notFirstLoad",!0),localStorage.setItem("saved",JSON.stringify(e))}return JSON.parse(localStorage.getItem("saved"))},createCustomElement:function(e,t,i=[]){let s=document.createElement(e);return Object.assign(s,t),i.length&&i.forEach(e=>s.appendChild(e)),s}};let n={init(e){this.handleSelectPaneItem=this.handleSelectPaneItem.bind(this),this.mount=this.mount.bind(this),this.add=this.add.bind(this),this.remove=this.remove.bind(this),this.strike=this.strike.bind(this),this.handleEdit=this.handleEdit.bind(this),this.debounce=this.debounce.bind(this),this.addToPaneList=this.addToPaneList.bind(this),this.removeFromPaneList=this.removeFromPaneList.bind(this),this.mount(e,Object.keys(e)[0])},mount(e,t){this.records=e;const i=o.initPane(Object.keys(this.records),this.handleSelectPaneItem,this.addToPaneList,this.removeFromPaneList);this.handleSelectPaneItem(t)({target:i[t]})},handleSelectPaneItem(e){return t=>{this.mountedObject&&(this.mountedObject.paneNode.classList.remove("selected"),this.mountedObject.reference.unmount());const{add:i,remove:s,strike:n,handleEdit:o,debounce:a}=this;this.mountedObject={paneNode:t.target,reference:new r(e,this.records[e],{add:i,remove:s,strike:n,handleEdit:o,debounce:a})},this.mountedObject.paneNode.classList.add("selected"),this.mountedObject.reference.mount()}},add(e){return t=>{if("click"!==t.type&&"Enter"!==t.code)return;let i=document.querySelector(".inputTask").value.trim();if(""===i)return;const s={...this.records,[e]:{...this.records[e],items:[i,...this.records[e].items]}};document.querySelector(".inputTask").value="",this.mount(s,e)}},remove(e,t,i){return()=>{if("items"===i&&!confirm("Are you sure you want to delete an uncompleted task?"))return;const s={...this.records,[e]:{...this.records[e],[i]:this.records[e][i].reduce((e,i,s)=>s!==t?[...e,i]:e,[])}};this.mount(s,e)}},strike(e,t,i){return()=>{const s=this.records[e][i][t],n={...this.records,[e]:{...this.records[e],[i]:this.records[e][i].reduce((e,i,s)=>s!==t?[...e,i]:e,[])}};"items"===i?n[e].doneItems=[...n[e].doneItems,s]:n[e].items=[...n[e].items,s],this.mount(n,e)}},handleEdit(e,t,i){return s=>{const n=s.target.value.trim();if(""!==n)return{...this.records,[e]:{...this.records[e],[i]:this.records[e][i].reduce((e,i,s)=>s!==t?[...e,i]:[...e,n],[])}}}},debounce(e,t){let i;const s=this;return function(){const n=this,r=arguments;this.style.height="auto",this.style.height=this.scrollHeight+"px";const o=function(){i=null,s.records=e.apply(n,r)||s.records};clearTimeout(i),i=setTimeout(o,t)}},addToPaneList(){let e=prompt("What would you like to name your new list","");if(null===e||""===e.trim())return void alert("Your list must have a name!");if(e=e.trim(),Object.keys(this.records).includes(e))return void alert("You already have a list with the same name! Try some other name");const t={...this.records,[e]:{items:[],doneItems:[]}};this.mount(t,e)},removeFromPaneList(e){return()=>{if(!confirm("Are you sure you want to delete the list?"))return;const t=(()=>{for(key in obj={},this.records)key!==e&&(obj[key]=this.records[key]);return obj})();this.mount(t,Object.keys(t)[0])}}};class r{constructor(e,t,i){this.listName=e,this.record=t,this.helpers=i,this.list=document.querySelector(".myList"),this.mount=this.mount.bind(this),this.unmount=this.unmount.bind(this),this.createNode=this.createNode.bind(this),this.createText=this.createText.bind(this),this.autoResize=this.autoResize.bind(this),this.attachToDOM=this.attachToDOM.bind(this)}mount(){let e=document.querySelector("#add"),t=document.querySelector(".inputTask");this.addEventHandler=this.helpers.add(this.listName),e.addEventListener("click",this.addEventHandler),t.addEventListener("keydown",this.addEventHandler),this.attachToDOM()}unmount(){let e=document.querySelector("#add"),t=document.querySelector(".inputTask");return e.removeEventListener("click",this.addEventHandler),t.removeEventListener("keydown",this.addEventHandler),this.record}createNode(e,t,i){let s=document.createElement("li");s.classList.add("listItem");let n=document.createElement("input");n.type="checkbox",n.className="check",t===this.record.doneItems&&(n.checked=!0,s.classList.add("strike")),n.addEventListener("click",this.helpers.strike(this.listName,e,i)),s.appendChild(n),this.createText(t[e],e,i,s);let r=document.createElement("button");return r.innerHTML='<i class="fas fa-trash"></i>',r.id="delete",r.addEventListener("click",this.helpers.remove(this.listName,e,i)),s.appendChild(r),s}createText(e,t,i,s){let n=document.createElement("textarea");n.className="itemText",n.value=e,n.addEventListener("click",e=>{e.target.focus()}),n.addEventListener("input",this.helpers.debounce(this.helpers.handleEdit(this.listName,t,i),1e3)),s.appendChild(n)}autoResize(){document.querySelectorAll(".itemText").forEach(e=>{e.style.height="auto",e.style.height=e.scrollHeight+"px"})}attachToDOM(){for(;this.list.firstChild;)this.list.removeChild(this.list.firstChild);for(let e in this.record)this.record[e].forEach((t,i,s)=>this.list.appendChild(this.createNode(i,s,e)));this.autoResize()}}let o={initPane(e,t,i,s){return this.paneRecords=e,this.onSelectPaneItem=t,this.onAddToPaneList=i,this.onRemoveFromPaneList=s,this.paneList=document.querySelector("#paneButtons"),this.createNodePaneList=this.createNodePaneList.bind(this),this.attachToDOMPane=this.attachToDOMPane.bind(this),this.newButton=document.querySelector("#newList"),this.newButton.addEventListener("click",this.onAddToPaneList),this.attachToDOMPane()},createNodePaneList(e){let t=document.createElement("button");t.className="btn btn-outline-dark paneItems",t.innerText=e,this.paneList.appendChild(t),t.addEventListener("click",this.onSelectPaneItem(e));let i=document.createElement("button");return i.className="btn btn-outline-danger paneDelete",i.innerHTML="X",i.addEventListener("click",this.onRemoveFromPaneList(e)),this.paneList.appendChild(i),t},attachToDOMPane(){for(;this.paneList.firstChild;)this.paneList.removeChild(this.paneList.firstChild);return this.paneRecords.reduce((e,t)=>({...e,[t]:this.createNodePaneList(t)}),{})}};var a=n;window.onload=()=>{const e=s.getSavedData();a.init(e)},window.onunload=()=>{const e=a.records;localStorage.setItem("saved",JSON.stringify(e))}}]);